#!/bin/bash

# Scammer Detection Smart Contract Deployment Script
# This script deploys the smart contract and updates the frontend configuration

echo "🚀 Deploying Scammer Detection Smart Contract..."

# Navigate to contract directory
cd "$(dirname "$0")/scammer"

# Build the contract
echo "📦 Building smart contract..."
sui move build

if [ $? -ne 0 ]; then
    echo "❌ Contract build failed"
    exit 1
fi

echo "✅ Contract built successfully"

# Deploy the contract
echo "🌐 Deploying contract to testnet..."
DEPLOY_OUTPUT=$(sui client publish --gas-budget 100000000 --json)

if [ $? -ne 0 ]; then
    echo "❌ Contract deployment failed"
    exit 1
fi

echo "✅ Contract deployed successfully"

# Extract package ID and object IDs from deployment output
PACKAGE_ID=$(echo "$DEPLOY_OUTPUT" | jq -r '.objectChanges[] | select(.type == "published") | .packageId')
DETECTOR_STATE_ID=$(echo "$DEPLOY_OUTPUT" | jq -r '.objectChanges[] | select(.objectType | contains("DetectorState")) | .objectId')

echo "📄 Deployment Results:"
echo "Package ID: $PACKAGE_ID"
echo "Detector State ID: $DETECTOR_STATE_ID"

# Update frontend configuration
echo "🔧 Updating frontend configuration..."
cd "../scammer-client"

# Update .env file
cat > .env << EOF
# Smart Contract Configuration - Auto-generated by deployment script
VITE_PACKAGE_ID=$PACKAGE_ID
VITE_DETECTOR_STATE_ID=$DETECTOR_STATE_ID
VITE_NETWORK=testnet
EOF

echo "✅ Frontend configuration updated"

# Update contract.ts with the new values
sed -i.bak "s/import.meta.env.VITE_PACKAGE_ID || \"0x0\"/\"$PACKAGE_ID\"/g" src/config/contract.ts
sed -i.bak "s/import.meta.env.VITE_DETECTOR_STATE_ID || \"0x0\"/\"$DETECTOR_STATE_ID\"/g" src/config/contract.ts

echo "✅ Contract configuration updated"

echo ""
echo "🎉 Deployment Complete!"
echo ""
echo "📋 Summary:"
echo "  Package ID: $PACKAGE_ID"
echo "  Detector State ID: $DETECTOR_STATE_ID"
echo "  Network: testnet"
echo ""
echo "🔗 Next Steps:"
echo "  1. Start the frontend: cd scammer-client && pnpm dev"
echo "  2. Connect your wallet and start monitoring!"
echo "  3. Test the scam detection features"
echo ""
